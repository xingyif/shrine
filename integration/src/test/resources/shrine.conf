shrine {
  humanReadableNodeName = "UnitTestNode"

  messagequeue {
    implementation = "net.shrine.hornetqmom.LocalHornetQMom"
  }

  problem {
    database {
      dataSourceFrom = "testDataSource"
      slickProfileClassName = "slick.driver.H2Driver$"
      createTablesOnStart = true
      createTestValuesOnStart = false
      testDataSource {
        driverClassName = "org.h2.Driver"
        numThreads = 30
        url = "jdbc:h2:mem:test;DB_CLOSE_DELAY=-1"
      }
    }
  }
  pmEndpoint {
    url = "http://services.i2b2.org/i2b2/rest/PMService/getServices"
    acceptAllCerts = true
    timeout {
      seconds = 1
    }
  }
  ontEndpoint {
    url = "http://example.com:9090/i2b2/rest/OntologyService/"
    acceptAllCerts = true
    timeout {
      seconds = 1
    }
  }
  hiveCredentials {
    domain = "HarvardDemo"
    username = "demo"
    password = "examplePassword"
    crcProjectId = "Demo"
    ontProjectId = "SHRINE"
  }
  queryEntryPoint {
    attachSigningCert = true
    authenticationType = "ecommons"
    authorizationType = "hms-steward" //can be none, shrine-steward, or hms-steward
    sheriffEndpoint {
      url = "http://localhost:8080/shrine-hms-authorization/queryAuthorization"
      acceptAllCerts = true
      timeout {
        seconds = 1
      }
    }
    sheriffCredentials {
      username = "sheriffUsername"
      password = "sheriffPassword"
    }
    includeAggregateResults = false
    maxQueryWaitTime {
      minutes = 5
    }
    broadcasterServiceEndpoint {
      url = "http://example.com/shrine/rest/broadcaster/broadcast"
      acceptAllCerts = true
      timeout {
        seconds = 1
      }
    }
    audit {
      database {
        slickProfileClassName = "slick.driver.H2Driver$"
        createTablesOnStart = true
        dataSourceFrom = "testDataSource"
        testDataSource {
          driverClassName = "org.h2.Driver"
          url = "jdbc:h2:mem:test;DB_CLOSE_DELAY=-1"
        }
      }
    }
  }
  hub {
    create = true
    maxQueryWaitTime {
      minutes = 4.5
    }
    downstreamNodes {
      some hospital = "http://example.com/foo"
      CHB = "http://example.com/chb"
      PHS = "http://example.com/phs"
    }
    shouldQuerySelf = true
  }
  adapter {
    crcEndpoint {
      url = "http://services.i2b2.org/i2b2/rest/QueryToolService/"
      acceptAllCerts = true
      timeout {
        seconds = 1
      }
    }
    setSizeObfuscation = true
    adapterLockoutAttemptsThreshold = 0
    adapterMappingsFileName = "AdapterMappings.xml"
    maxSignatureAge {
      minutes = 5
    }
    immediatelyRunIncomingQueries = false
  }
  networkStatusQuery = "\\\\SHRINE\\SHRINE\\Diagnoses\\Mental Illness\\Disorders usually diagnosed in infancy, childhood, or adolescence\\Pervasive developmental disorders\\Infantile autism, current or active state\\"
  humanReadableNodeName = "SHRINE Cell"
  shrineDatabaseType = "mysql"
  keystore {
    file = "shrine.keystore"
    password = "chiptesting"
    privateKeyAlias = "test-cert"
    keyStoreType = "PKCS12"
    caCertAliases = [
      "carra ca"
    ]
  }
}

shrine {
  queryEntryPoint {
    create = true
    audit {
      collectQepAudit = true
      database {
        dataSourceFrom = "JNDI" //Can be JNDI or testDataSource . Use testDataSource for tests, JNDI everywhere else
        jndiDataSourceName = "java:comp/env/jdbc/qepAuditDB" //or leave out for tests
        slickProfileClassName = "slick.driver.MySQLDriver$" // Can be
        //        slick.driver.H2Driver$
        //        slick.driver.MySQLDriver$
        //        slick.driver.PostgresDriver$
        //        slick.driver.SQLServerDriver$
        //        slick.driver.JdbcDriver$
        //        freeslick.OracleProfile$
        //        freeslick.MSSQLServerProfile$
        //
        //        (Yes, with the $ on the end)

        // For testing without JNDI
        //      testDataSource {

        //typical test settings for unit tests
        //driverClassName = "org.h2.Driver"

        //url = "jdbc:h2:mem:test;DB_CLOSE_DELAY=-1" //H2 embedded in-memory for unit tests
        //url = "jdbc:h2:~/stewardTest.h2" //H2 embedded on disk at ~/test
        //      }
        timeout = 30 //time to wait before db gives up, in seconds.
        createTablesOnStart = false //for testing with H2 in memory, when not running unit tests. Set to false normally
      }
    }
    trustModelIsHub = true  // False for P2P networks.

    attachSigningCert = true

    authenticationType = "pm" //can be none, pm, or ecommons

    authorizationType = "shrine-steward" //can be none, shrine-steward, or hms-steward

    //hms-steward config
//    sheriffEndpoint {
//      url = "http://localhost:8080/shrine-hms-authorization/queryAuthorization"
//      acceptAllCerts = true
//      timeout {
//        seconds = 1
//      }
//    }

//    sheriffCredentials {
//      username = "sheriffUsername"
//      password = "sheriffPassword"
//    }

    //shrine-steward config
    shrineSteward {
      qepUserName = "qep"
//      qepPassword = "trustme"
//      stewardBaseUrl = "https://localhost:6443"
    }

//    includeAggregateResults = false
//
//    maxQueryWaitTime {
//      minutes = 5
//    }

//    broadcasterServiceEndpoint {
//      url = "http://example.com/shrine/rest/broadcaster/broadcast"
//      acceptAllCerts = true
//      timeout {
//        seconds = 1
//      }
//    }
  }
}
shrine {
  dashboard {
    gruntWatch = false //false for production, true for mvn tomcat7:run . Allows the client javascript and html files to be loaded via gruntWatch .
    happyBaseUrl = "https://localhost:6443/shrine/rest/happy"
    statusBaseUrl = "https://localhost:6443/shrine/rest/internalstatus"

    database {
      dataSourceFrom = "JNDI" //Can be JNDI or testDataSource . Use testDataSource for tests, JNDI everywhere else
      jndiDataSourceName = "java:comp/env/jdbc/problemDB" //or leave out for tests
      slickProfileClassName = "slick.driver.MySQLDriver$" // Can be
      //        slick.driver.H2Driver$
      //        slick.driver.MySQLDriver$
      //        slick.driver.PostgresDriver$
      //        slick.driver.SQLServerDriver$
      //        slick.driver.JdbcDriver$
      //        freeslick.OracleProfile$
      //        freeslick.MSSQLServerProfile$
      //
      //        (Yes, with the $ on the end)

      // For testing without JNDI
      //      testDataSource {

      //typical test settings for unit tests
      //driverClassName = "org.h2.Driver"

      //url = "jdbc:h2:mem:test;DB_CLOSE_DELAY=-1" //H2 embedded in-memory for unit tests
      //url = "jdbc:h2:~/stewardTest.h2" //H2 embedded on disk at ~/test
      //      }
      createTablesOnStart = false //for testing with H2 in memory, when not running unit tests. Set to false normally
    }
  }

  pmEndpoint {
//    url = "http://example.com/i2b2/services/PMService/getServices" //set to the right pm endpoint
    acceptAllCerts = true
    timeout {
      seconds = 10
    }
  }

  authenticate {
    realm = "SHRINE Steward API"
    usersource
      {
        type = "PmUserSource" //Must be ConfigUserSource (for isolated testing) or PmUserSource (for everything else)
        domain = "set shrine.authenticate.usersource.domain to the PM authentication domain in dashboard.conf" //"i2b2demo"
      }
  }

  // If the pmEndpoint acceptAllCerts = false then you need to supply a keystore
  // Or if you would like dashboard-to-dashboard comms to work.
  //  keystore {
  //    file = "shrine.keystore"
  //    password = "chiptesting"
  //    privateKeyAlias = "test-cert"
  //    keyStoreType = "JKS"
  //    caCertAliases = [carra ca]
  //  }
}

//todo typesafe config precedence seems to do the right thing, but I haven't found the rules that say this reference.conf should override others
akka {
  loglevel = INFO

  //  log-config-on-start = on
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  //  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  // Toggles whether the threads created by this ActorSystem should be daemons or not
  daemonic = on
}

spray.servlet {
  boot-class = "net.shrine.dashboard.net.shrine.metadata.Boot"
  request-timeout = 30s
}


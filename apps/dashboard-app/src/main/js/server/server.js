
const express = require('express');       
const cors = require('cors');
const app = express();                
const bodyParser = require('body-parser');
const router = express.Router();
const PORT = 6443
const BASE = '/shrine-dashboard';

app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());
app.use(cors());
app.use(BASE, router);
app.listen(PORT);
console.log('SHRINE Dashboard Mock Server started on port: ' + PORT);

const parseAuthHeader = req => {
  const token = (req.headers['authorization'] || '')
    .split(/\s+/).pop() || '';
  
  const parts = (new Buffer(token, 'base64').toString())
    .split(/:/);

  return {
    username: parts[0],
    password: parts[1]
  }

/*
  var header = req.headers['authorization'] || '',        // get the header
  token = header.split(/\s+/).pop() || '',            // and the encoded auth token
  auth = new Buffer(token, 'base64').toString(),    // convert from base64
  parts = auth.split(/:/),                          // split on colon
  username = parts[0],
  password = parts[1];

  return {
    username: username,
    password: password
  };*/
}


// -- routes --//
//http://localhost:6443/shrine-dashboard/user/whoami
router.get('/user/whoami', function (req, res) {
  const user = parseAuthHeader(req);
  let response = { userName: 'ben', fullName: 'ben', roles: ['Researcher'] };

  if (user.username == 'dave') 
    response = { userName: 'dave', fullName: 'dave', roles: ['Researcher', 'DataSteward'] };
  
  else if(user.username == 'fail') response = 'AuthenticationFailed';

  res.json(response);
});

//http://localhost:6443/shrine-dashboard/admin/status/i2b2
router.get('/admin/status/i2b2', function (req, res) {
  const user = parseAuthHeader(req);
  let response = {
    pmUrl : 'http://shrine-qa1-i2b2.catalyst:9090/i2b2/services/PMService/getServices',
    crcUrl: 'http://shrine-qa1-i2b2.catalyst:9090/i2b2/services/QueryToolService/',
    ontUrl: 'http://shrine-qa1-i2b2.catalyst:9090/i2b2/services/OntologyService/',
    i2b2Domain: 'i2b2demo',
    username: 'demo',
    crcProject: 'Demo',
    ontProject: 'SHRINE'
  }

  res.json(response);
});

//http://localhost:6443/shrine-dashboard/admin/status/optionalParts
router.get('/admin/status/optionalParts', function (req, res) {
  const user = parseAuthHeader(req);
  let response = {
    "isHub":true,"stewardEnabled":true,"shouldQuerySelf":false,"downstreamNodes":[{"name":"shrine-qa4","url":"https://shrine-qa4.catalyst:6443/shrine/rest/adapter/requests"},{"name":"shrine-qa2","url":"https://shrine-qa2.catalyst:6443/shrine/rest/adapter/requests"},{"name":"shrine-qa3","url":"https://shrine-qa3.catalyst:6443/shrine/rest/adapter/requests"},{"name":"shrine-qa1","url":"https://shrine-qa1.catalyst:6443/shrine/rest/adapter/requests"}]
  }

  res.json(response);
});

//http://localhost:6443/shrine-dashboard/admin/status/qep
router.get('/admin/status/qep', function (req, res) {
  const user = parseAuthHeader(req);
  let response = {
    "maxQueryWaitTimeMillis":300000000,"create":true,"attachSigningCert":true,"authorizationType":"StewardQueryAuthorizationService","includeAggregateResults":false,"authenticationType":"PmAuthenticator","steward":{"stewardBaseUrl":"https://shrine-qa1.catalyst:6443","qepUsername":"qep","password":"REDACTED"},"trustModel":"Central Certificate Authority","trustModelIsHub":true
  }

  res.json(response);
});

//http://localhost:6443/shrine-dashboard/admin/status/keystore
router.get('/admin/status/keystore', function (req, res) {
  const user = parseAuthHeader(req);
  let response = {
    "fileName":"/opt/shrine/shrine.keystore","password":"REDACTED","privateKeyAlias":"shrine-qa1-signing","owner":"C=US, CN=shrine-qa1.catalyst, L=Boston, O=Harvard Medical School, OU=Catalyst SHRINE QA Hub, ST=Massachusetts","issuer":"C=US, CN=shrine-qa-ca, L=Boston, O=Harvard Medical School, OU=Catalyst SHRINE QA Network, ST=Massachusetts","expires":1578677878000,"md5Signature":"A7:5B:D7:15:45:D1:ED:5B:C6:1C:BA:4C:BD:82:CA:EA","sha256Signature":"A3:9A:FA:0C:10:19:DB:40:66:F6:91:B7:FC:7D:3A:30:FE:29:F4:88:60:ED:CF:5A:9D:F9:C6:4C:FC:7E:EA:7C","caTrustedAlias":"shrine-qa-ca","caTrustedSignature":"E4:5D:1E:90:2D:37:0C:27:02:F4:26:47:97:A9:A7:FA","remoteSiteStatuses":[{"siteAlias":"shrine-qa2","theyHaveMine":true,"haveTheirs":true,"url":"shrine-qa2.catalyst","timeOutError":false},{"siteAlias":"shrine-qa3","theyHaveMine":true,"haveTheirs":true,"url":"shrine-qa3.catalyst","timeOutError":false},{"siteAlias":"shrine-qa4","theyHaveMine":true,"haveTheirs":true,"url":"shrine-qa4.catalyst","timeOutError":false},{"siteAlias":"shrine-qa1","theyHaveMine":true,"haveTheirs":true,"url":"shrine-qa1.catalyst","timeOutError":false}],"isHub":true,"abbreviatedEntries":[{"alias":"shrine-qa1-signing","cn":"shrine-qa1.catalyst","md5":"A7:5B:D7:15:45:D1:ED:5B:C6:1C:BA:4C:BD:82:CA:EA"},{"alias":"shrine-qa-ca","cn":"shrine-qa-ca","md5":"E4:5D:1E:90:2D:37:0C:27:02:F4:26:47:97:A9:A7:FA"}]
  }

  res.json(response);
});

//http://localhost:6443/shrine-dashboard/admin/status/hub
router.get('/admin/status/hub', function (req, res) {
  const user = parseAuthHeader(req);
  let response = {
    "shouldQuerySelf":false,"create":true,"downstreamNodes":[{"name":"shrine-qa4","url":"https://shrine-qa4.catalyst:6443/shrine/rest/adapter/requests"},{"name":"shrine-qa2","url":"https://shrine-qa2.catalyst:6443/shrine/rest/adapter/requests"},{"name":"shrine-qa3","url":"https://shrine-qa3.catalyst:6443/shrine/rest/adapter/requests"},{"name":"shrine-qa1","url":"https://shrine-qa1.catalyst:6443/shrine/rest/adapter/requests"}]
  }

  res.json(response);
});

//http://localhost:6443/shrine-dashboard/admin/status/adapter
router.get('/admin/status/adapter', function (req, res) {
  const user = parseAuthHeader(req);
  let response = {
    "crcEndpointUrl":"http://shrine-qa1-i2b2.catalyst:9090/i2b2/services/QueryToolService/","setSizeObfuscation":true,"adapterLockoutAttemptsThreshold":0,"adapterMappingsFilename":"AdapterMappings.csv","adapterMappingsDate":1490476446000
  }
  res.json(response);
});

//http://localhost:6443/shrine-dashboard/admin/status/config
router.get('/admin/status/config', function (req, res) {
  const user = parseAuthHeader(req);
  let response = {
    "isHub":true,"hub":{"shouldQuerySelf":false,"create":true,"downstreamNodes":[{"name":"shrine-qa1","url":"https://shrine-qa1.catalyst:6443/shrine/rest/adapter/requests"},{"name":"shrine-qa2","url":"https://shrine-qa2.catalyst:6443/shrine/rest/adapter/requests"},{"name":"shrine-qa3","url":"https://shrine-qa3.catalyst:6443/shrine/rest/adapter/requests"},{"name":"shrine-qa4","url":"https://shrine-qa4.catalyst:6443/shrine/rest/adapter/requests"}]},"pmEndpoint":{"acceptAllCerts":false,"url":"http://shrine-qa1-i2b2.catalyst:9090/i2b2/services/PMService/getServices","timeoutSeconds":0},"ontEndpoint":{"acceptAllCerts":false,"url":"http://shrine-qa1-i2b2.catalyst:9090/i2b2/services/OntologyService/","timeoutSeconds":0},"hiveCredentials":{"domain":"i2b2demo","username":"demo","password":"REDACTED","crcProjectId":"Demo","ontProjectId":"SHRINE"},"adapter":{"crcEndpointUrl":"http://shrine-qa1-i2b2.catalyst:9090/i2b2/services/QueryToolService/","setSizeObfuscation":true,"adapterLockoutAttemptsThreshold":0,"adapterMappingsFilename":"AdapterMappings.csv"},"queryEntryPoint":{"maxQueryWaitTimeMinutes":5,"create":true,"attachSigningCert":true,"authorizationType":"shrine-steward","includeAggregateResults":false,"authenticationType":"pm","audit":{"database":{"createTablesOnStart":false,"dataSourceFrom":"JNDI","jndiDataSourceName":"java:comp/env/jdbc/qepAuditDB","slickProfileClassName":"slick.jdbc.OracleProfile$"},"collectQepAudit":true},"shrineSteward":{"qepUserName":"qep","stewardBaseUrl":"https://shrine-qa1.catalyst:6443"}},"networkStatusQuery":"\\\\\\\\SHRINE\\\\SHRINE\\\\Demographics\\\\Gender\\\\Male\\\\","configMap":{"spray.can.server.parsing.ssl-session-info-header":"off","spray.can.listener-dispatcher":"akka.actor.default-dispatcher","spray.can.client.parsing.header-cache.default":"12","java.io.tmpdir":"/opt/shrine/tomcat/temp","akka.actor.mailbox.requirements.akka.dispatch.UnboundedDequeBasedMessageQueueSemantics":"akka.actor.mailbox.unbounded-deque-based","shrine.queryEntryPoint.audit.database.createTablesOnStart":"false","spray.can.host-connector.client.request-header-size-hint":"512","spray.can.client.parsing.header-cache.If-Modified-Since":"0","akka.actor.deployment.default.routees.paths":"[]","spray.routing.file-chunking-chunk-size":"128k","akka.io.udp.direct-buffer-pool-limit":"1000","shrine.queryEntryPoint.maxQueryWaitTime.minutes":"5","akka.actor.deployment.default.optimal-size-exploring-resizer.enabled":"off","akka.actor.unstarted-push-timeout":"10s","akka.actor.mailbox.bounded-control-aware-queue-based.mailbox-type":"akka.dispatch.BoundedControlAwareMailbox","spray.can.parsing.max-chunk-ext-length":"256","spray.can.client.parsing.max-content-length":"8m","line.separator":"\\n","spray.can.server.parsing.header-cache.User-Agent":"32","akka.actor.default-dispatcher.fork-join-executor.task-peeking-mode":"FIFO","spray.can.server.parsing.max-uri-length":"2k","spray.servlet.timeout-timeout":"500 ms","akka.actor.default-mailbox.mailbox-type":"akka.dispatch.UnboundedMailbox","spray.servlet.max-content-length":"5 m","shrine.queryEntryPoint.audit.database.dataSourceFrom":"JNDI","akka.actor.serializers.java":"akka.serialization.JavaSerializer","akka.actor.dsl.default-timeout":"5s","shrine.adapter.setSizeObfuscation":"true","shrine.queryEntryPoint.audit.collectQepAudit":"true","spray.can.server.chunkhandler-registration-timeout":"500 ms","akka.actor.serialize-creators":"off","akka.actor.deployment.default.virtual-nodes-factor":"10","akka.actor.mailbox.requirements.akka.dispatch.BoundedControlAwareMessageQueueSemantics":"akka.actor.mailbox.bounded-control-aware-queue-based","shrine.problem.timeout":"30","shrine.queryEntryPoint.create":"true","path.separator":":","spray.can.host-connector.client.parsing.header-cache.If-Match":"0","spray.can.host-connector.client.max-encryption-chunk-size":"1m","spray.can.client.parsing.max-header-count":"64","shrine.messagequeue.blockingq.messageRedeliveryDelay":"20 seconds","spray.can.manager-dispatcher":"akka.actor.default-dispatcher","akka.io.tcp.worker-dispatcher":"akka.actor.default-dispatcher","akka.jvm-exit-on-fatal-error":"false","akka.io.udp.worker-dispatcher":"akka.actor.default-dispatcher","spray.servlet.boot-class":"","spray.can.client.parsing.max-chunk-size":"1m","shrine.hiveCredentials.username":"demo","jdk.tls.ephemeralDHKeySize":"2048","shrine.adapter.adapterLockoutAttemptsThreshold":"0","sun.management.compiler":"HotSpot 64-Bit Tiered Compilers","akka.actor.default-dispatcher.fork-join-executor.parallelism-min":"8","shrine.messagequeue.httpClient.timeOutWaitGap":"1 second","akka.io.udp.selector-association-retries":"10","akka.scheduler.tick-duration":"10ms","spray.can.host-connector.client.parsing.uri-parsing-mode":"strict","akka.library-extensions":"[]","spray.can.client.parsing.max-uri-length":"2k","sun.cpu.endian":"little","akka.actor.mailbox.requirements.akka.dispatch.DequeBasedMessageQueueSemantics":"akka.actor.mailbox.unbounded-deque-based","spray.can.parsing.max-chunk-size":"1m","shrine.problem.database.jndiDataSourceName":"java:comp/env/jdbc/problemDB","spray.can.server.parsing.header-cache.If-Range":"0","spray.can.client.parsing.ssl-session-info-header":"off","akka.io.tcp.register-timeout":"5s","java.specification.version":"1.8","shrine.hub.create":"true","akka.actor.creation-timeout":"20s","spray.can.host-connector.client.parsing.header-cache.Date":"0","java.vm.specification.name":"Java Virtual Machine Specification","shrine.steward.createTopicsMode":"Pending","akka.actor.default-dispatcher.thread-pool-executor.fixed-pool-size":"off","java.vm.specification.version":"1.8","shrine.hub.downstreamNodes.shrine-qa1":"https://shrine-qa1.catalyst:6443/shrine/rest/adapter/requests","akka.actor.router.type-mapping.random-group":"akka.routing.RandomGroup","shrine.hiveCredentials.ontProjectId":"SHRINE","user.home":"/home/shrine","akka.log-dead-letters-during-shutdown":"on","file.encoding.pkg":"sun.io","spray.can.client.chunkless-streaming":"off","akka.scheduler.ticks-per-wheel":"512","akka.actor.dsl.inbox-size":"1000","shrine.problem.problemHandler":"net.shrine.problem.LogAndDatabaseProblemHandler$","spray.can.parsing.max-header-value-length":"8k","akka.actor.default-mailbox.stash-capacity":"-1","spray.can.client.ssl-tracing":"off","sun.arch.data.model":"64","akka.io.udp-connected.received-message-size-limit":"unlimited","akka.log-config-on-start":"off","akka.io.tcp.direct-buffer-size":"128 KiB","akka.actor.default-dispatcher.type":"Dispatcher","akka.actor.deployment.default.resizer.rampup-rate":"0.2","akka.actor.deployment./IO-DNS/inet-address.nr-of-instances":"4","spray.servlet.remote-address-header":"off","sun.boot.library.path":"/opt/jdk1.8.0_121/jre/lib/amd64","spray.can.client.parsing.header-cache.User-Agent":"32","akka.actor.deployment.default.resizer.backoff-threshold":"0.3","user.dir":"/home/shrine","spray.can.host-connector.client.chunkless-streaming":"off","akka.actor.mailbox.unbounded-queue-based.mailbox-type":"akka.dispatch.UnboundedMailbox","akka.actor.deployment.default.resizer.messages-per-resize":"10","akka.actor.router.type-mapping.balancing-pool":"akka.routing.BalancingPool","akka.actor.debug.autoreceive":"off","akka.io.pinned-dispatcher.type":"PinnedDispatcher","akka.actor.debug.unhandled":"off","akka.io.udp.selector-dispatcher":"akka.io.pinned-dispatcher","akka.actor.deployment.default.router":"from-code","akka.actor.debug.fsm":"off","akka.loggers-dispatcher":"akka.actor.default-dispatcher","shrine.networkStatusQuery":"\\\\\\\\SHRINE\\\\SHRINE\\\\Demographics\\\\Gender\\\\Male\\\\","java.library.path":"/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib","spray.can.client.parsing.max-chunk-ext-length":"256","akka.actor.router.type-mapping.from-code":"akka.routing.NoRouter","java.util.logging.manager":"org.apache.juli.ClassLoaderLogManager","sun.cpu.isalist":"","akka.actor.router.type-mapping.broadcast-pool":"akka.routing.BroadcastPool","shrine.adapter.maxSignatureAge.minutes":"5","akka.io.udp.management-dispatcher":"akka.actor.default-dispatcher","spray.can.server.raw-request-uri-header":"off","akka.actor.deployment.default.resizer.enabled":"off","spray.can.client.parsing.max-response-reason-length":"64","akka.io.dns.dispatcher":"akka.actor.default-dispatcher","spray.can.host-connector.pipelining":"off","shrine.hub.downstreamNodes.shrine-qa2":"https://shrine-qa2.catalyst:6443/shrine/rest/adapter/requests","spray.can.server.timeout-handler":"","shrine.adapter.audit.collectAdapterAudit":"true","slick.verifyTypes":"false","shrine.messagequeue.implementation":"net.shrine.messagequeueclient.MessageQueueWebClient","os.arch":"amd64","spray.can.client.parsing.max-header-value-length":"8k","java.vm.version":"25.121-b13","spray.can.client.request-timeout":"20 s","spray.can.client.user-agent-header":"spray-can/1.3.4","spray.can.host-connector.client.parsing.header-cache.If-Unmodified-Since":"0","akka.actor.warn-about-java-serializer-usage":"on","shrine.email.javaxmail.mail.smtp.port":"25","akka.actor.deployment.default.resizer.lower-bound":"1","shrine.messagequeue.blockingq.webClientTimeOut":"10 seconds","spray.can.server.timeout-timeout":"2 s","akka.actor.serialization-bindings.[B":"bytes","akka.io.tcp.selector-association-retries":"10","spray.servlet.servlet-request-access":"off","spray.can.server.parsing.max-header-value-length":"8k","spray.can.parsing.incoming-auto-chunking-threshold-size":"infinite","akka.actor.router.type-mapping.scatter-gather-group":"akka.routing.ScatterGatherFirstCompletedGroup","akka.actor.mailbox.requirements.akka.dispatch.UnboundedControlAwareMessageQueueSemantics":"akka.actor.mailbox.unbounded-control-aware-queue-based","slick.dumpPaths":"false","akka.actor.router.type-mapping.consistent-hashing-group":"akka.routing.ConsistentHashingGroup","spray.can.host-connector.idle-timeout":"infinite","shrine.ontEndpoint.url":"http://shrine-qa1-i2b2.catalyst:9090/i2b2/services/OntologyService/",
    "akka.io.udp-connected.select-timeout":"infinite","akka.io.udp.nr-of-selectors":"1","spray.can.host-connector.client.parsing.illegal-header-warnings":"on","akka.io.tcp.trace-logging":"off","akka.actor.deployment.default.within":"5 seconds","spray.can.client.connecting-timeout":"10s","akka.io.tcp.file-io-dispatcher":"akka.actor.default-dispatcher","shrine.queryEntryPoint.attachSigningCert":"true","shrine.steward.database.dataSourceFrom":"JNDI","spray.can.server.parsing.illegal-header-warnings":"on","common.loader":"\\${catalina.base}/lib\\,\\${catalina.base}/lib/*.jar\\,\\${catalina.home}/lib\\,\\${catalina.home}/lib/*.jar\\","java.endorsed.dirs":"/opt/shrine/tomcat/endorsed","java.runtime.version":"1.8.0_121-b13","spray.can.host-connector.client.parsing.max-chunk-ext-length":"256","java.util.logging.config.file":"/opt/shrine/tomcat/conf/logging.properties","akka.actor.debug.lifecycle":"off","java.vm.info":"mixed mode","spray.can.host-connector.max-connections":"1000","akka.actor.deployment.default.optimal-size-exploring-resizer.explore-step-size":"0.1","akka.actor.debug.router-misconfiguration":"off","spray.routing.verbose-error-messages":"off","shrine.adapter.audit.database.dataSourceFrom":"JNDI","akka.actor.default-dispatcher.thread-pool-executor.core-pool-size-min":"8","shrine.steward.database.jndiDataSourceName":"java:comp/env/jdbc/stewardDB","akka.io.udp.max-channels":"4096","spray.can.server.reaping-cycle":"250 ms","shrine.queryEntryPoint.audit.database.timeout":"30","java.ext.dirs":"/opt/jdk1.8.0_121/jre/lib/ext:/usr/java/packages/lib/ext","akka.actor.default-dispatcher.throughput-deadline-time":"0ms","spray.can.client.parsing.header-cache.Date":"0","spray.can.parsing.uri-parsing-mode":"strict","shrine.keystore.file":"/opt/shrine/shrine.keystore","akka.actor.deployment.default.dispatcher":"","package.access":"sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat.","akka.logging-filter":"akka.event.DefaultLoggingFilter","akka.io.tcp.management-dispatcher":"akka.actor.default-dispatcher","spray.can.host-connector.client.parsing.incoming-auto-chunking-threshold-size":"infinite","shrine.adapter.obfuscation.binSize":"5","spray.can.client.max-encryption-chunk-size":"1m","java.runtime.name":"Java(TM) SE Runtime Environment","akka.actor.default-mailbox.mailbox-push-timeout-time":"10s","akka.actor.default-dispatcher.default-executor.fallback":"fork-join-executor","akka.actor.router.type-mapping.round-robin-group":"akka.routing.RoundRobinGroup","akka.io.udp.receive-throughput":"3","spray.can.host-connector.client.parsing.ssl-session-info-header":"off","akka.actor.deployment.default.optimal-size-exploring-resizer.optimization-range":"16","spray.servlet.illegal-header-warnings":"on","shrine.authenticate.realm":"SHRINE Web API","akka.actor.deployment.default.optimal-size-exploring-resizer.weight-of-latest-metric":"0.5","akka.stdout-loglevel":"WARNING","shrine.adapter.audit.database.jndiDataSourceName":"java:comp/env/jdbc/adapterAuditDB","shrine.queryEntryPoint.authorizationType":"shrine-steward","spray.can.server.parsing.max-chunk-size":"1m","shrine.authenticate.usersource.type":"PmUserSource","file.separator":"/","spray.can.client.idle-timeout":"60 s","spray.can.server.parsing.header-cache.Date":"0","shrine.breakdownResultOutputTypes.PATIENT_GENDER_COUNT_XML.description":"Gender patient breakdown","spray.can.host-connector.client.parsing.header-cache.If-None-Match":"0","spray.can.parsing.ssl-session-info-header":"off","spray.can.host-connector.client.idle-timeout":"60 s","akka.actor.router.type-mapping.consistent-hashing-pool":"akka.routing.ConsistentHashingPool","akka.io.tcp.batch-accept-limit":"10","shrine.keystore.privateKeyAlias":"shrine-qa1-signing","spray.can.client.parsing.header-cache.If-Match":"0","shrine.authenticate.usersource.domain":"i2b2demo","spray.can.parsing.header-cache.Date":"0","akka.io.udp.received-message-size-limit":"unlimited","akka.io.dns.inet-address.cache-cleanup-interval":"120s","spray.can.client.parsing.uri-parsing-mode":"strict","akka.actor.deployment.default.nr-of-instances":"1","spray.routing.file-get-conditional":"on","akka.actor.deployment.default.tail-chopping-router.interval":"10 milliseconds","shrine.steward.emailDataSteward.interval":"20 days","akka.actor.enable-additional-serialization-bindings":"off","spray.can.host-connector.client.parsing.header-cache.If-Modified-Since":"0","shrine.breakdownResultOutputTypes.PATIENT_AGE_COUNT_XML.description":"Age patient breakdown","akka.actor.router.type-mapping.broadcast-group":"akka.routing.BroadcastGroup","shrine.adapter.obfuscation.sigma":"6.5","akka.actor.mailbox.bounded-queue-based.mailbox-type":"akka.dispatch.BoundedMailbox","spray.can.server.parsing.header-cache.If-None-Match":"0","spray.can.parsing.header-cache.Content-MD5":"0","shrine.adapter.crcEndpoint.url":"http://shrine-qa1-i2b2.catalyst:9090/i2b2/services/QueryToolService/","spray.can.server.unbind-timeout":"1s","shrine.hub.downstreamNodes.shrine-qa3":"https://shrine-qa3.catalyst:6443/shrine/rest/adapter/requests","akka.daemonic":"on","tomcat.util.scan.StandardJarScanFilter.jarsToScan":"log4j-web*.jar,log4j-taglib*.jar,log4javascript*.jar,slf4j-taglib*.jar","akka.io.udp-connected.max-channels":"4096","spray.can.server.ssl-tracing":"off","java.class.version":"52.0","akka.io.udp-connected.selector-dispatcher":"akka.io.pinned-dispatcher","spray.can.server.back-pressure.noack-rate":"10","spray.can.server.parsing.uri-parsing-mode":"strict","java.specification.name":"Java Platform API Specification","sun.boot.class.path":"/opt/jdk1.8.0_121/jre/lib/resources.jar:/opt/jdk1.8.0_121/jre/lib/rt.jar:/opt/jdk1.8.0_121/jre/lib/sunrsasign.jar:/opt/jdk1.8.0_121/jre/lib/jsse.jar:/opt/jdk1.8.0_121/jre/lib/jce.jar:/opt/jdk1.8.0_121/jre/lib/charsets.jar:/opt/jdk1.8.0_121/jre/lib/jfr.jar:/opt/jdk1.8.0_121/jre/classes","spray.can.server.parsing.max-header-count":"64","akka.actor.deployment.default.optimal-size-exploring-resizer.downsize-ratio":"0.8","akka.extensions":"[]","akka.actor.typed.timeout":"5s","akka.actor.deployment./IO-DNS/inet-address.mailbox":"unbounded","shrine.adapter.delayResponse":"2 seconds","spray.can.server.server-header":"spray-can/1.3.4","spray.can.server.request-chunk-aggregation-limit":"1m","akka.actor.deployment.default.optimal-size-exploring-resizer.chance-of-ramping-down-when-full":"0.2","akka.io.udp-connected.selector-association-retries":"10","shrine.steward.emailDataSteward.to":"Isha_Johri@hms.harvard.edu","akka.actor.serialize-messages":"off","spray.can.host-connector.client.parsing.max-content-length":"8m","spray.can.server.registration-timeout":"1s","akka.actor.serialization-identifiers.akka.serialization.ByteArraySerializer":"4","shrine.pmEndpoint.url":"http://shrine-qa1-i2b2.catalyst:9090/i2b2/services/PMService/getServices","akka.io.udp-connected.management-dispatcher":"akka.actor.default-dispatcher","spray.can.parsing.max-content-length":"8m","spray.can.server.back-pressure.reading-low-watermark":"infinite","spray.can.server.parsing.max-chunk-ext-length":"256","akka.loglevel":"INFO","spray.can.server.parsing.header-cache.If-Unmodified-Since":"0","spray.can.server.transparent-head-requests":"on","spray.can.client.parsing.header-cache.Content-MD5":"0","akka.io.tcp.selector-dispatcher":"akka.io.pinned-dispatcher","shrine.queryEntryPoint.shrineSteward.qepUserName":"qep","user.timezone":"America/New_York","spray.can.server.parsing.max-header-name-length":"64","shrine.queryEntryPoint.changeNotifier.interval":"5 minutes","spray.can.client.proxy.http":"default","server.loader":"","tomcat.util.buf.StringCache.byte.enabled":"true","spray.can.host-connector.max-retries":"0","shrine.squerylDataSource.database.dataSourceFrom":"JNDI","spray.can.settings-group-dispatcher":"akka.actor.default-dispatcher","spray.can.server.parsing.header-cache.default":"12","spray.can.client.proxy.https":"default","spray.can.server.ssl-encryption":"off","spray.can.server.parsing.incoming-auto-chunking-threshold-size":"infinite","akka.actor.default-dispatcher.fork-join-executor.parallelism-factor":"3","spray.can.host-connector-dispatcher":"akka.actor.default-dispatcher","shrine.messagequeue.blockingq.messageMaxDeliveryAttempts":"2","java.specification.vendor":"Oracle Corporation","spray.can.host-connector.client.response-chunk-aggregation-limit":"1m","spray.can.server.parsing.max-content-length":"8m","spray.routing.file-chunking-threshold-size":"128k","akka.io.tcp.direct-buffer-pool-limit":"1000","sun.java.launcher":"SUN_STANDARD","spray.can.server.request-timeout":"20 s","akka.actor.default-dispatcher.shutdown-timeout":"1s","akka.io.dns.inet-address.provider-object":"akka.io.InetAddressDnsProvider","shared.loader":"","spray.can.server.parsing.max-response-reason-length":"64","akka.actor.deployment.default.optimal-size-exploring-resizer.upper-bound":"10","os.version":"2.6.32-642.15.1.el6.x86_64","akka.actor.deployment.default.optimal-size-exploring-resizer.lower-bound":"1","java.naming.factory.initial":"org.apache.naming.java.javaURLContextFactory","spray.can.server.chunkless-streaming":"off","spray.can.client.parsing.incoming-auto-chunking-threshold-size":"infinite","spray.can.client.parsing.header-cache.If-Unmodified-Since":"0","spray.can.host-connector.max-redirects":"0","spray.can.host-connector.client.parsing.header-cache.User-Agent":"32","akka.io.udp.trace-logging":"off","akka.io.udp-connected.receive-throughput":"3","spray.can.parsing.max-header-count":"64","shrine.hiveCredentials.crcProjectId":"Demo","spray.can.parsing.illegal-header-warnings":"on",
    "tomcat.util.scan.StandardJarScanFilter.jarsToSkip":"bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,websocket-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-storeconfig.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-util-scan.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-websocket.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,tools.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,taglibs-standard-spec-*.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,junit.jar,junit-*.jar,ant-launcher.jar,cobertura-*.jar,asm-*.jar,dom4j-*.jar,icu4j-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,oro-*.jar,servlet-api-*.jar,tagsoup-*.jar,xmlParserAPIs-*.jar,xom-*.jar","spray.can.parsing.max-response-reason-length":"64","shrine.adapter.audit.database.slickProfileClassName":"slick.jdbc.OracleProfile$","sun.os.patch.level":"unknown","spray.can.parsing.header-cache.If-Range":"0","akka.actor.default-dispatcher.thread-pool-executor.core-pool-size-factor":"3","spray.can.parsing.header-cache.If-Modified-Since":"0","shrine.queryEntryPoint.includeAggregateResults":"false","akka.actor.router.type-mapping.tail-chopping-pool":"akka.routing.TailChoppingPool","catalina.home":"/opt/shrine/tomcat","package.definition":"sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat.","shrine.queryEntryPoint.authenticationType":"pm","akka.actor.default-dispatcher.thread-pool-executor.max-pool-size-factor":"3","shrine.adapter.create":"true","akka.actor.default-dispatcher.fork-join-executor.parallelism-max":"64","shrine.queryEntryPoint.audit.database.jndiDataSourceName":"java:comp/env/jdbc/qepAuditDB","spray.can.host-connector.client.user-agent-header":"spray-can/1.3.4","akka.actor.deployment.default.mailbox":"","java.vm.specification.vendor":"Oracle Corporation","shrine.problem.database.slickProfileClassName":"slick.jdbc.MySQLProfile$","spray.can.host-connector.client.parsing.header-cache.If-Range":"0","slick.ansiDump":"false","spray.can.client.parsing.header-cache.If-None-Match":"0","akka.home":"","akka.actor.provider":"local","shrine.steward.database.slickProfileClassName":"slick.jdbc.OracleProfile$","spray.can.client.response-chunk-aggregation-limit":"1m","shrine.queryEntryPoint.trustModelIsHub":"true","akka.io.tcp.max-received-message-size":"unlimited","akka.actor.mailbox.requirements.akka.dispatch.BoundedMessageQueueSemantics":"akka.actor.mailbox.bounded-queue-based","shrine.adapter.adapterMappingsFileName":"AdapterMappings.csv","spray.can.parsing.header-cache.If-Match":"0","akka.actor.default-dispatcher.mailbox-requirement":"","akka.actor.serializers.bytes":"akka.serialization.ByteArraySerializer","akka.actor.default-dispatcher.executor":"default-executor","akka.actor.debug.receive":"off","shrine.steward.emailDataSteward.from":"David_Walend@hms.harvard.edu","akka.actor.default-dispatcher.thread-pool-executor.max-pool-size-max":"64","akka.actor.mailbox.requirements.akka.event.LoggerMessageQueueSemantics":"akka.actor.mailbox.logger-queue","spray.can.parsing.max-uri-length":"2k","user.country":"US","shrine.hiveCredentials.domain":"i2b2demo","shrine.keystore.keyStoreType":"JKS","shrine.problem.database.dataSourceFrom":"JNDI","sun.jnu.encoding":"UTF-8","shrine.hub.maxQueryWaitTime.minutes":"4.5","akka.version":"2.4.16","user.language":"en","spray.can.host-connector.client.connecting-timeout":"10s","akka.io.pinned-dispatcher.thread-pool-executor.allow-core-timeout":"off","akka.scheduler.shutdown-timeout":"5s","spray.can.client.parsing.illegal-header-warnings":"on","akka.actor.default-dispatcher.attempt-teamwork":"on","spray.servlet.uri-parsing-mode":"relaxed","akka.io.tcp.max-channels":"256000","shrine.keystore.caCertAliases":"[\n    # shrine.conf @ file:/opt/shrine/tomcat/lib/shrine.conf: 53\n    shrine-qa-ca\n]","akka.actor.mailbox.unbounded-control-aware-queue-based.mailbox-type":"akka.dispatch.UnboundedControlAwareMailbox","slick.sqlIndent":"false","akka.actor.default-dispatcher.thread-pool-executor.max-pool-size-min":"8","akka.actor.default-dispatcher.thread-pool-executor.task-queue-type":"linked","spray.servlet.timeout-handler":"","spray.can.server.verbose-error-messages":"off","shrine.humanReadableNodeName":"shrine-qa1","akka.io.tcp.file-io-transferTo-limit":"512 KiB","akka.loggers":"[\n    # reference.conf @ file:/opt/shrine/tomcat/webapps/shrine/WEB-INF/classes/reference.conf: 17\n    akka.event.slf4j.Slf4jLogger\n]","spray.can.host-connector.client.parsing.header-cache.default":"12","spray.can.parsing.header-cache.If-None-Match":"0","spray.servlet.root-path":"AUTO","akka.io.tcp.finish-connect-retries":"5","spray.can.client.parsing.header-cache.If-Range":"0","akka.actor.mailbox.requirements.akka.dispatch.BoundedDequeBasedMessageQueueSemantics":"akka.actor.mailbox.bounded-deque-based","akka.actor.default-dispatcher.throughput":"5","akka.actor.mailbox.requirements.akka.dispatch.UnboundedMessageQueueSemantics":"akka.actor.mailbox.unbounded-queue-based","akka.scheduler.implementation":"akka.actor.LightArrayRevolverScheduler","shrine.adapter.audit.database.createTablesOnStart":"false","akka.actor.default-mailbox.mailbox-capacity":"1000","spray.can.server.parsing.header-cache.Content-MD5":"0","shrine.hub.shouldQuerySelf":"false","spray.routing.range-coalescing-threshold":"80","akka.actor.router.type-mapping.random-pool":"akka.routing.RandomPool","shrine.messagequeue.blockingqWebApi.enabled":"true","java.naming.factory.url.pkgs":"org.apache.naming","spray.can.host-connector.client.parsing.max-header-count":"64","shrine.hub.downstreamNodes.shrine-qa4":"https://shrine-qa4.catalyst:6443/shrine/rest/adapter/requests","spray.can.parsing.header-cache.default":"12","shrine.steward.emailDataSteward.minTimeBetweenAudits":"10 minutes","shrine.shrineDatabaseType":"mysql","spray.can.server.parsing.header-cache.If-Modified-Since":"0","akka.io.dns.resolver":"inet-address","shrine.queryEntryPoint.shrineSteward.stewardBaseUrl":"https://shrine-qa1.catalyst:6443","java.awt.printerjob":"sun.print.PSPrinterJob","java.awt.graphicsenv":"sun.awt.X11GraphicsEnvironment","spray.can.host-connector.client.proxy.http":"default","spray.servlet.request-timeout":"30 s","spray.can.host-connector.client.parsing.max-response-reason-length":"64","akka.io.pinned-dispatcher.thread-pool-executor.allow-core-pool-timeout":"off","akka.actor.deployment.default.optimal-size-exploring-resizer.downsize-after-underutilized-for":"72h","akka.actor.guardian-supervisor-strategy":"akka.actor.DefaultSupervisorStrategy","catalina.useNaming":"true","spray.routing.range-count-limit":"16","shrine.squerylDataSource.database.jndiDataSourceName":"java:comp/env/jdbc/shrineDB","akka.actor.serialization-bindings.java.io.Serializable":"java","akka.actor.default-dispatcher.thread-pool-executor.keep-alive-time":"60s","awt.toolkit":"sun.awt.X11.XToolkit","spray.can.server.parsing.header-cache.If-Match":"0","akka.io.udp.direct-buffer-size":"128 KiB","java.class.path":"/opt/shrine/tomcat/bin/bootstrap.jar:/opt/shrine/tomcat/bin/tomcat-juli.jar","akka.actor.default-dispatcher.thread-pool-executor.core-pool-size-max":"64","akka.io.udp.select-timeout":"infinite","spray.can.host-connector.client.proxy.https":"default","akka.actor.router.type-mapping.scatter-gather-pool":"akka.routing.ScatterGatherFirstCompletedPool","akka.actor.deployment.default.resizer.pressure-threshold":"1","akka.actor.serialization-identifiers.akka.serialization.JavaSerializer":"1","java.protocol.handler.pkgs":"org.apache.catalina.webresources","shrine.problem.database.createTablesOnStart":"false","spray.can.client.request-header-size-hint":"512","spray.can.server.idle-timeout":"60 s","akka.io.udp-connected.trace-logging":"off","os.name":"Linux","akka.io.dns.inet-address.negative-ttl":"10s","slick.detectRebuild":"false","shrine.queryEntryPoint.audit.database.slickProfileClassName":"slick.jdbc.OracleProfile$","spray.can.server.pipelining-limit":"1","spray.can.host-connector.client.request-timeout":"20 s","akka.actor.mailbox.requirements.akka.dispatch.MultipleConsumerSemantics":"akka.actor.mailbox.unbounded-queue-based","spray.can.server.max-encryption-chunk-size":"1m","shrine.messagequeue.httpClient.defaultTimeOut":"10 seconds","spray.can.host-connector.client.parsing.max-chunk-size":"1m","spray.can.server.parsing-error-abort-timeout":"2s","java.vm.vendor":"Oracle Corporation","akka.actor.deployment.default.optimal-size-exploring-resizer.chance-of-exploration":"0.4","akka.io.udp-connected.direct-buffer-pool-limit":"1000","spray.can.server.automatic-back-pressure-handling":"on","shrine.messagequeue.blockingq.serverUrl":"https://localhost:6443/shrine-metadata/mom","catalina.base":"/opt/shrine/tomcat","spray.can.server.verbose-error-logging":"off","akka.actor.mailbox.requirements.akka.dispatch.ControlAwareMessageQueueSemantics":"akka.actor.mailbox.unbounded-control-aware-queue-based","akka.io.dns.inet-address.positive-ttl":"30s","spray.can.host-connector.client.reaping-cycle":"250 ms","spray.can.host-connector.client.parsing.max-header-name-length":"64","akka.actor.router.type-mapping.round-robin-pool":"akka.routing.RoundRobinPool","spray.can.connection-dispatcher":"akka.actor.default-dispatcher","spray.can.server.stats-support":"on","slick.unicodeDump":"false","java.vendor.url.bug":"http://bugreport.sun.com/bugreport/",
    "akka.io.udp-connected.worker-dispatcher":"akka.actor.default-dispatcher","spray.can.client.reaping-cycle":"250 ms","akka.io.udp-connected.direct-buffer-size":"128 KiB","spray.can.server.response-header-size-hint":"512","spray.can.parsing.max-header-name-length":"64","spray.can.host-connector.client.parsing.header-cache.Content-MD5":"0","akka.actor.deployment.default.resizer.upper-bound":"10","akka.actor.default-dispatcher.thread-pool-executor.allow-core-timeout":"on","shrine.adapter.botDefense.countsAndMilliseconds":"[\n    # shrine.conf @ file:/opt/shrine/tomcat/lib/shrine.conf: 125\n    #  allow up to 10 queries in 1 minute\n    {\n        # shrine.conf @ file:/opt/shrine/tomcat/lib/shrine.conf: 125\n        count : 10,\n        # shrine.conf @ file:/opt/shrine/tomcat/lib/shrine.conf: 125\n        milliseconds : 60000\n    }\n,\n    # shrine.conf @ file:/opt/shrine/tomcat/lib/shrine.conf: 126\n    #  allow up to 200 queries in 10 hours\n    {\n        # shrine.conf @ file:/opt/shrine/tomcat/lib/shrine.conf: 126\n        count : 200,\n        # shrine.conf @ file:/opt/shrine/tomcat/lib/shrine.conf: 126\n        milliseconds : 36000000\n    }\n\n]","user.name":"shrine","akka.actor.mailbox.unbounded-deque-based.mailbox-type":"akka.dispatch.UnboundedDequeBasedMailbox","akka.actor.default-dispatcher.thread-pool-executor.task-queue-size":"-1","akka.logger-startup-timeout":"5s","shrine.queryEntryPoint.immediatelyRunIncomingQueries":"true","shrine.breakdownResultOutputTypes.PATIENT_RACE_COUNT_XML.description":"Race patient breakdown","akka.actor.mailbox.bounded-deque-based.mailbox-type":"akka.dispatch.BoundedDequeBasedMailbox","spray.can.client.parsing.max-header-name-length":"64","akka.actor.warn-on-no-serialization-verification":"on","spray.can.host-connector.client.ssl-tracing":"off","shrine.messagequeue.blockingq.waitTimeBeforeResent":"5 seconds","spray.can.parsing.header-cache.If-Unmodified-Since":"0","akka.actor.deployment./IO-DNS/inet-address.router":"consistent-hashing-pool","spray.servlet.verbose-error-messages":"off","shrine.adapter.immediatelyRunIncomingQueries":"true","akka.io.tcp.nr-of-selectors":"1","akka.actor.router.type-mapping.smallest-mailbox-pool":"akka.routing.SmallestMailboxPool","java.vm.name":"Java HotSpot(TM) 64-Bit Server VM","akka.actor.mailbox.logger-queue.mailbox-type":"akka.event.LoggerMailboxType","akka.io.tcp.windows-connection-abort-workaround-enabled":"off","shrine.breakdownResultOutputTypes.PATIENT_VITALSTATUS_COUNT_XML.description":"Vital Status patient breakdown","akka.actor.router.type-mapping.tail-chopping-group":"akka.routing.TailChoppingGroup","spray.routing.render-vanity-footer":"yes","sun.java.command":"org.apache.catalina.startup.Bootstrap start","spray.can.server.remote-address-header":"off","akka.actor.deployment.default.resizer.backoff-rate":"0.1","akka.actor.debug.event-stream":"off","spray.version":"1.3.4","spray.can.host-connector.client.parsing.max-header-value-length":"8k","akka.actor.deployment.default.optimal-size-exploring-resizer.action-interval":"5s","shrine.messagequeue.blockingq.messageTimeToLive":"4 days","java.home":"/opt/jdk1.8.0_121/jre","akka.io.udp-connected.nr-of-selectors":"1","spray.can.host-connector.client.parsing.max-uri-length":"2k","shrine.metaData.stewardEmail":"david_walend@hms.harvard.edu","spray.can.parsing.header-cache.User-Agent":"32","akka.io.pinned-dispatcher.executor":"thread-pool-executor","spray.can.server.bind-timeout":"1s","akka.log-dead-letters":"10","java.version":"1.8.0_121","shrine.metaData.test":"testing!","sun.io.unicode.encoding":"UnicodeLittle","spray.can.server.default-host-header":"","shrine.adapter.obfuscation.clamp":"10","shrine.steward.emailDataSteward.maxQueryCountBetweenAudits":"5"}
  }
  res.json(response);
});


//http://localhost:6443/shrine-dashboard/admin/status/problems
router.get('/admin/status/problems', function (req, res) {
  const user = parseAuthHeader(req);
  let response = {
    "size":642,"offset":0,"n":20,"problems":[{"codec":"net.shrine.adapter.BotDetected","stampText":"Tue Dec 12 10:39:36 EST 2017 on shrine-qa1.catalyst Adapter","summary":"A user has run so many queries in a period of time that the adapter suspects a bot.","description":"happy:happy has run 10 queries since Tue Dec 12 10:38:36 EST 2017, more than the limit of 10 allowed in this time frame.","detailsXml":{"details":{"exception":{"name":"net.shrine.adapter.dao.BotDetectedException","message":"happy:happy has already run 10 queries since Tue Dec 12 10:38:36 EST 2017. The limit is 10","stacktrace":{"line":["net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1$$anonfun$apply$2.apply$mcV$sp(SquerylAdapterDao.scala:241)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1$$anonfun$apply$2.apply(SquerylAdapterDao.scala:237)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1$$anonfun$apply$2.apply(SquerylAdapterDao.scala:237)","org.squeryl.AbstractSession$class.using(Session.scala:182)","org.squeryl.Session.using(Session.scala:101)","org.squeryl.Session.withinTransaction(Session.scala:128)","org.squeryl.dsl.QueryDsl$class.inTransaction(QueryDsl.scala:124)","net.shrine.dao.squeryl.SquerylEntryPoint$.inTransaction(SquerylEntryPoint.scala:12)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao.inTransaction(SquerylAdapterDao.scala:32)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1.apply(SquerylAdapterDao.scala:237)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1.apply(SquerylAdapterDao.scala:237)","scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)","scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao.checkIfBot(SquerylAdapterDao.scala:237)","net.shrine.adapter.RunQueryAdapter.processRequest(RunQueryAdapter.scala:68)","net.shrine.adapter.RunQueryAdapter.processRequest(RunQueryAdapter.scala:32)","net.shrine.adapter.Adapter.perform(Adapter.scala:33)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1$$anonfun$apply$2.apply(AdapterService.scala:33)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1$$anonfun$apply$2.apply(AdapterService.scala:33)","net.shrine.adapter.service.AdapterService$.time(AdapterService.scala:68)","net.shrine.adapter.service.AdapterService$.time(AdapterService.scala:76)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1.apply(AdapterService.scala:32)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1.apply(AdapterService.scala:31)","scala.Option.map(Option.scala:146)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1.apply(AdapterService.scala:31)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1.apply(AdapterService.scala:31)","scala.Option.orElse(Option.scala:289)","net.shrine.adapter.service.AdapterService.handleRequest(AdapterService.scala:29)","net.shrine.adapter.service.AdapterResource$$anonfun$net$shrine$adapter$service$AdapterResource$$handleRequest$1$2.apply(AdapterResource.scala:33)","net.shrine.adapter.service.AdapterResource$$anonfun$net$shrine$adapter$service$AdapterResource$$handleRequest$1$2.apply(AdapterResource.scala:30)","scala.util.Try$.apply(Try.scala:192)","net.shrine.adapter.service.AdapterResource.net$shrine$adapter$service$AdapterResource$$handleRequest$1(AdapterResource.scala:30)","net.shrine.adapter.service.AdapterResource$$anonfun$2.apply(AdapterResource.scala:56)","net.shrine.adapter.service.AdapterResource$$anonfun$2.apply(AdapterResource.scala:56)","scala.util.Try.transform(Try.scala:178)","net.shrine.adapter.service.AdapterResource.handleRequest(AdapterResource.scala:56)","sun.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)","sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","java.lang.reflect.Method.invoke(Method.java:498)","com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)","com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)","com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)","com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)","com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)","com.sun.jersey.server.impl.uri.rules.ResourceObjectRule.accept(ResourceObjectRule.java:100)","com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)","com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)","com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)","com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)","com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)","com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)","com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)","com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)","com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)","javax.servlet.http.HttpServlet.service(HttpServlet.java:729)","org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)","org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)","org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)","org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)","org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)","org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)","org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)","org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)","org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)","org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)","org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)","org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)","org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:509)","org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1104)","org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:684)","org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1520)","org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1476)","java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)","java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)","org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)","java.lang.Thread.run(Thread.java:745)"]}}}},"epoch":1513093176223},{"codec":"net.shrine.adapter.BotDetected","stampText":"Tue Dec 12 10:39:36 EST 2017 on shrine-qa1.catalyst Adapter","summary":"A user has run so many queries in a period of time that the adapter suspects a bot.","description":"happy:happy has run 10 queries since Tue Dec 12 10:38:35 EST 2017, more than the limit of 10 allowed in this time frame.","detailsXml":{"details":{"exception":{"name":"net.shrine.adapter.dao.BotDetectedException","message":"happy:happy has already run 10 queries since Tue Dec 12 10:38:35 EST 2017. The limit is 10","stacktrace":{"line":["net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1$$anonfun$apply$2.apply$mcV$sp(SquerylAdapterDao.scala:241)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1$$anonfun$apply$2.apply(SquerylAdapterDao.scala:237)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1$$anonfun$apply$2.apply(SquerylAdapterDao.scala:237)","org.squeryl.AbstractSession$class.using(Session.scala:182)","org.squeryl.Session.using(Session.scala:101)","org.squeryl.Session.withinTransaction(Session.scala:128)","org.squeryl.dsl.QueryDsl$class.inTransaction(QueryDsl.scala:124)","net.shrine.dao.squeryl.SquerylEntryPoint$.inTransaction(SquerylEntryPoint.scala:12)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao.inTransaction(SquerylAdapterDao.scala:32)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1.apply(SquerylAdapterDao.scala:237)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1.apply(SquerylAdapterDao.scala:237)","scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)","scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao.checkIfBot(SquerylAdapterDao.scala:237)","net.shrine.adapter.RunQueryAdapter.processRequest(RunQueryAdapter.scala:68)","net.shrine.adapter.RunQueryAdapter.processRequest(RunQueryAdapter.scala:32)","net.shrine.adapter.Adapter.perform(Adapter.scala:33)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1$$anonfun$apply$2.apply(AdapterService.scala:33)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1$$anonfun$apply$2.apply(AdapterService.scala:33)","net.shrine.adapter.service.AdapterService$.time(AdapterService.scala:68)","net.shrine.adapter.service.AdapterService$.time(AdapterService.scala:76)",
    "net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1.apply(AdapterService.scala:32)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1.apply(AdapterService.scala:31)","scala.Option.map(Option.scala:146)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1.apply(AdapterService.scala:31)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1.apply(AdapterService.scala:31)","scala.Option.orElse(Option.scala:289)","net.shrine.adapter.service.AdapterService.handleRequest(AdapterService.scala:29)","net.shrine.status.Summary$$anonfun$22$$anonfun$23.apply(StatusJaxrs.scala:387)","net.shrine.status.Summary$$anonfun$22$$anonfun$23.apply(StatusJaxrs.scala:387)","scala.util.Try$.apply(Try.scala:192)","net.shrine.status.Summary$$anonfun$22.apply(StatusJaxrs.scala:387)","net.shrine.status.Summary$$anonfun$22.apply(StatusJaxrs.scala:382)","scala.Option.map(Option.scala:146)","net.shrine.status.Summary$.apply(StatusJaxrs.scala:382)","net.shrine.status.StatusJaxrs.summary(StatusJaxrs.scala:72)","sun.reflect.GeneratedMethodAccessor108.invoke(Unknown Source)","sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","java.lang.reflect.Method.invoke(Method.java:498)","com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)","com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$TypeOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:185)","com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)","com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)","com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)","com.sun.jersey.server.impl.uri.rules.ResourceObjectRule.accept(ResourceObjectRule.java:100)","com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)","com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)","com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)","com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)","com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)","com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)","com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)","com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)","com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)","javax.servlet.http.HttpServlet.service(HttpServlet.java:729)","org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)","org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)","org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)","org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)","org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)","org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)","org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)","org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)","org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)","org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)","org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)","org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)","org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:509)","org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1104)","org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:684)","org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1520)","org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1476)","java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)","java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)","org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)","java.lang.Thread.run(Thread.java:745)"]}}}},"epoch":1513093176006},{"codec":"net.shrine.adapter.BotDetected","stampText":"Tue Dec 12 10:39:25 EST 2017 on shrine-qa1.catalyst Adapter","summary":"A user has run so many queries in a period of time that the adapter suspects a bot.","description":"happy:happy has run 10 queries since Tue Dec 12 10:38:25 EST 2017, more than the limit of 10 allowed in this time frame.","detailsXml":{"details":{"exception":{"name":"net.shrine.adapter.dao.BotDetectedException","message":"happy:happy has already run 10 queries since Tue Dec 12 10:38:25 EST 2017. The limit is 10","stacktrace":{"line":["net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1$$anonfun$apply$2.apply$mcV$sp(SquerylAdapterDao.scala:241)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1$$anonfun$apply$2.apply(SquerylAdapterDao.scala:237)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1$$anonfun$apply$2.apply(SquerylAdapterDao.scala:237)","org.squeryl.AbstractSession$class.using(Session.scala:182)","org.squeryl.Session.using(Session.scala:101)","org.squeryl.Session.withinTransaction(Session.scala:128)","org.squeryl.dsl.QueryDsl$class.inTransaction(QueryDsl.scala:124)","net.shrine.dao.squeryl.SquerylEntryPoint$.inTransaction(SquerylEntryPoint.scala:12)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao.inTransaction(SquerylAdapterDao.scala:32)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1.apply(SquerylAdapterDao.scala:237)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1.apply(SquerylAdapterDao.scala:237)","scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)","scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao.checkIfBot(SquerylAdapterDao.scala:237)","net.shrine.adapter.RunQueryAdapter.processRequest(RunQueryAdapter.scala:68)","net.shrine.adapter.RunQueryAdapter.processRequest(RunQueryAdapter.scala:32)","net.shrine.adapter.Adapter.perform(Adapter.scala:33)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1$$anonfun$apply$2.apply(AdapterService.scala:33)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1$$anonfun$apply$2.apply(AdapterService.scala:33)","net.shrine.adapter.service.AdapterService$.time(AdapterService.scala:68)","net.shrine.adapter.service.AdapterService$.time(AdapterService.scala:76)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1.apply(AdapterService.scala:32)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1.apply(AdapterService.scala:31)","scala.Option.map(Option.scala:146)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1.apply(AdapterService.scala:31)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1.apply(AdapterService.scala:31)","scala.Option.orElse(Option.scala:289)","net.shrine.adapter.service.AdapterService.handleRequest(AdapterService.scala:29)","net.shrine.adapter.service.AdapterResource$$anonfun$net$shrine$adapter$service$AdapterResource$$handleRequest$1$2.apply(AdapterResource.scala:33)","net.shrine.adapter.service.AdapterResource$$anonfun$net$shrine$adapter$service$AdapterResource$$handleRequest$1$2.apply(AdapterResource.scala:30)","scala.util.Try$.apply(Try.scala:192)","net.shrine.adapter.service.AdapterResource.net$shrine$adapter$service$AdapterResource$$handleRequest$1(AdapterResource.scala:30)","net.shrine.adapter.service.AdapterResource$$anonfun$2.apply(AdapterResource.scala:56)","net.shrine.adapter.service.AdapterResource$$anonfun$2.apply(AdapterResource.scala:56)","scala.util.Try.transform(Try.scala:178)","net.shrine.adapter.service.AdapterResource.handleRequest(AdapterResource.scala:56)","sun.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)","sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","java.lang.reflect.Method.invoke(Method.java:498)","com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)","com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)","com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)","com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)","com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)","com.sun.jersey.server.impl.uri.rules.ResourceObjectRule.accept(ResourceObjectRule.java:100)","com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)","com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)","com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)","com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)","com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)",
    "com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)","com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)","com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)","com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)","javax.servlet.http.HttpServlet.service(HttpServlet.java:729)","org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)","org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)","org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)","org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)","org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)","org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)","org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)","org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)","org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)","org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)","org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)","org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)","org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:509)","org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1104)","org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:684)","org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1520)","org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1476)","java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)","java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)","org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)","java.lang.Thread.run(Thread.java:745)"]}}}},"epoch":1513093165630},{"codec":"net.shrine.adapter.BotDetected","stampText":"Tue Dec 12 10:39:25 EST 2017 on shrine-qa1.catalyst Adapter","summary":"A user has run so many queries in a period of time that the adapter suspects a bot.","description":"happy:happy has run 10 queries since Tue Dec 12 10:38:25 EST 2017, more than the limit of 10 allowed in this time frame.","detailsXml":{"details":{"exception":{"name":"net.shrine.adapter.dao.BotDetectedException","message":"happy:happy has already run 10 queries since Tue Dec 12 10:38:25 EST 2017. The limit is 10","stacktrace":{"line":["net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1$$anonfun$apply$2.apply$mcV$sp(SquerylAdapterDao.scala:241)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1$$anonfun$apply$2.apply(SquerylAdapterDao.scala:237)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1$$anonfun$apply$2.apply(SquerylAdapterDao.scala:237)","org.squeryl.AbstractSession$class.using(Session.scala:182)","org.squeryl.Session.using(Session.scala:101)","org.squeryl.Session.withinTransaction(Session.scala:128)","org.squeryl.dsl.QueryDsl$class.inTransaction(QueryDsl.scala:124)","net.shrine.dao.squeryl.SquerylEntryPoint$.inTransaction(SquerylEntryPoint.scala:12)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao.inTransaction(SquerylAdapterDao.scala:32)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1.apply(SquerylAdapterDao.scala:237)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao$$anonfun$checkIfBot$1.apply(SquerylAdapterDao.scala:237)","scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)","scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)","net.shrine.adapter.dao.squeryl.SquerylAdapterDao.checkIfBot(SquerylAdapterDao.scala:237)","net.shrine.adapter.RunQueryAdapter.processRequest(RunQueryAdapter.scala:68)","net.shrine.adapter.RunQueryAdapter.processRequest(RunQueryAdapter.scala:32)","net.shrine.adapter.Adapter.perform(Adapter.scala:33)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1$$anonfun$apply$2.apply(AdapterService.scala:33)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1$$anonfun$apply$2.apply(AdapterService.scala:33)","net.shrine.adapter.service.AdapterService$.time(AdapterService.scala:68)","net.shrine.adapter.service.AdapterService$.time(AdapterService.scala:76)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1.apply(AdapterService.scala:32)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1$$anonfun$apply$1.apply(AdapterService.scala:31)","scala.Option.map(Option.scala:146)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1.apply(AdapterService.scala:31)","net.shrine.adapter.service.AdapterService$$anonfun$handleRequest$1.apply(AdapterService.scala:31)","scala.Option.orElse(Option.scala:289)","net.shrine.adapter.service.AdapterService.handleRequest(AdapterService.scala:29)","net.shrine.status.Summary$$anonfun$22$$anonfun$23.apply(StatusJaxrs.scala:387)","net.shrine.status.Summary$$anonfun$22$$anonfun$23.apply(StatusJaxrs.scala:387)","scala.util.Try$.apply(Try.scala:192)","net.shrine.status.Summary$$anonfun$22.apply(StatusJaxrs.scala:387)","net.shrine.status.Summary$$anonfun$22.apply(StatusJaxrs.scala:382)","scala.Option.map(Option.scala:146)","net.shrine.status.Summary$.apply(StatusJaxrs.scala:382)","net.shrine.status.StatusJaxrs.summary(StatusJaxrs.scala:72)","sun.reflect.GeneratedMethodAccessor108.invoke(Unknown Source)","sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","java.lang.reflect.Method.invoke(Method.java:498)","com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)","com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$TypeOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:185)","com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)","com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)","com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)","com.sun.jersey.server.impl.uri.rules.ResourceObjectRule.accept(ResourceObjectRule.java:100)","com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)","com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)","com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)","com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)","com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)","com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)","com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)","com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)","com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)","javax.servlet.http.HttpServlet.service(HttpServlet.java:729)","org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)","org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)","org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)","org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)","org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)","org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)","org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)","org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)","org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)","org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)","org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)","org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)","org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:509)","org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1104)","org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:684)","org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1520)","org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1476)","java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)","java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)","org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)","java.lang.Thread.run(Thread.java:745)"]}}}},"epoch":1513093165480},{"codec":"net.shrine.adapter.components.QueryNotInDatabase","stampText":"Mon Dec 11 16:41:03 EST 2017 on shrine-qa1.catalyst Hub","summary":"Couldn't find query definition.","description":"The query definition with network id: 1664753991035856308 does not exist at this site.","detailsXml":{"details":""},"epoch":1513028463538},{"codec":"net.shrine.adapter.components.QueryNotInDatabase","stampText":"Mon Dec 11 16:40:45 EST 2017 on shrine-qa1.catalyst Hub","summary":"Couldn't find query definition.",
    "description":"The query definition with network id: 4396719815543744555 does not exist at this site.","detailsXml":{"details":""},"epoch":1513028445524},{"codec":"net.shrine.adapter.components.QueryNotInDatabase","stampText":"Mon Dec 11 16:13:20 EST 2017 on shrine-qa1.catalyst Hub","summary":"Couldn't find query definition.","description":"The query definition with network id: 9171946850775156648 does not exist at this site.","detailsXml":{"details":""},"epoch":1513026800962},{"codec":"net.shrine.adapter.components.QueryNotInDatabase","stampText":"Mon Dec 11 16:12:59 EST 2017 on shrine-qa1.catalyst Hub","summary":"Couldn't find query definition.","description":"The query definition with network id: 1664753991035856308 does not exist at this site.","detailsXml":{"details":""},"epoch":1513026779261},{"codec":"net.shrine.adapter.components.QueryNotInDatabase","stampText":"Mon Dec 11 16:12:26 EST 2017 on shrine-qa1.catalyst Hub","summary":"Couldn't find query definition.","description":"The query definition with network id: 9171946850775156648 does not exist at this site.","detailsXml":{"details":""},"epoch":1513026746578},{"codec":"net.shrine.aggregation.NoValidResponsesToAggregate","stampText":"Mon Dec 11 16:12:17 EST 2017 on shrine-qa1.catalyst Hub","summary":"No valid responses to aggregate.","description":"The hub received no valid responses to aggregate.","detailsXml":{"details":"\n      The hub received no valid responses to aggregate while processing a GetRequestXml for ij22:i2b2demo\n      \n    "},"epoch":1513026737109},{"codec":"net.shrine.adapter.components.QueryNotInDatabase","stampText":"Mon Dec 11 16:12:17 EST 2017 on shrine-qa1.catalyst Hub","summary":"Couldn't find query definition.","description":"The query definition with network id: 3491709790810434287 does not exist at this site.","detailsXml":{"details":""},"epoch":1513026737105},{"codec":"net.shrine.aggregation.NoValidResponsesToAggregate","stampText":"Mon Dec 11 16:11:52 EST 2017 on shrine-qa1.catalyst Hub","summary":"No valid responses to aggregate.","description":"The hub received no valid responses to aggregate.","detailsXml":{"details":"\n      The hub received no valid responses to aggregate while processing a GetRequestXml for ij22:i2b2demo\n      \n    "},"epoch":1513026712280},{"codec":"net.shrine.adapter.components.QueryNotInDatabase","stampText":"Mon Dec 11 16:11:52 EST 2017 on shrine-qa1.catalyst Hub","summary":"Couldn't find query definition.","description":"The query definition with network id: 3421268595687378155 does not exist at this site.","detailsXml":{"details":""},"epoch":1513026712256},{"codec":"net.shrine.aggregation.NoValidResponsesToAggregate","stampText":"Mon Dec 11 16:11:49 EST 2017 on shrine-qa1.catalyst Hub","summary":"No valid responses to aggregate.","description":"The hub received no valid responses to aggregate.","detailsXml":{"details":"\n      The hub received no valid responses to aggregate while processing a GetRequestXml for ij22:i2b2demo\n      \n    "},"epoch":1513026709339},{"codec":"net.shrine.adapter.components.QueryNotInDatabase","stampText":"Mon Dec 11 16:11:49 EST 2017 on shrine-qa1.catalyst Hub","summary":"Couldn't find query definition.","description":"The query definition with network id: 3421268595687378155 does not exist at this site.","detailsXml":{"details":""},"epoch":1513026709331},{"codec":"net.shrine.aggregation.NoValidResponsesToAggregate","stampText":"Mon Dec 11 16:11:46 EST 2017 on shrine-qa1.catalyst Hub","summary":"No valid responses to aggregate.","description":"The hub received no valid responses to aggregate.","detailsXml":{"details":"\n      The hub received no valid responses to aggregate while processing a GetRequestXml for ij22:i2b2demo\n      \n    "},"epoch":1513026706477},{"codec":"net.shrine.adapter.components.QueryNotInDatabase","stampText":"Mon Dec 11 16:11:46 EST 2017 on shrine-qa1.catalyst Hub","summary":"Couldn't find query definition.","description":"The query definition with network id: 3421268595687378155 does not exist at this site.","detailsXml":{"details":""},"epoch":1513026706472},{"codec":"net.shrine.aggregation.NoValidResponsesToAggregate","stampText":"Mon Dec 11 16:11:39 EST 2017 on shrine-qa1.catalyst Hub","summary":"No valid responses to aggregate.","description":"The hub received no valid responses to aggregate.","detailsXml":{"details":"\n      The hub received no valid responses to aggregate while processing a GetRequestXml for ij22:i2b2demo\n      \n    "},"epoch":1513026699876},{"codec":"net.shrine.adapter.components.QueryNotInDatabase","stampText":"Mon Dec 11 16:11:39 EST 2017 on shrine-qa1.catalyst Hub","summary":"Couldn't find query definition.","description":"The query definition with network id: 2703582126195817687 does not exist at this site.","detailsXml":{"details":""},"epoch":1513026699870},{"codec":"net.shrine.aggregation.NoValidResponsesToAggregate","stampText":"Mon Dec 11 16:11:29 EST 2017 on shrine-qa1.catalyst Hub","summary":"No valid responses to aggregate.","description":"The hub received no valid responses to aggregate.","detailsXml":{"details":"\n      The hub received no valid responses to aggregate while processing a GetRequestXml for ij22:i2b2demo\n      \n    "},"epoch":1513026689312}]
  }
  res.json(response);
});




/*
router.get('/steward/topics', function (req, res) {
  var user = service.parseAuthHeader(req);
  var role = 'DataSteward';
  var topics = service.getTopics(20, 'Pending', role);
  var response = {
    skipped: 0,
    totalCount: 50,
    userId: user.userName
  };

  response.topics = topics;
  res.json(response);
});

router.get('/researcher/topics', function (req, res) {
  var user = service.parseAuthHeader(req);
  var response = {
    skipped: 0,
    totalCount: 50,
    userId: user.userName
  };
  var topics = service.getTopics(20, 'Pending');

  response.topics = topics;
  res.json(response);
});

router.post('/researcher/editTopicRequest/:id', function (req, res) {
  res.end('ok');
});

router.post('/researcher/requestTopicAccess', function (req, res) {
  var topic = req.body.topic;
  res.end('ok');
});

router.post('/steward/approveTopic/topic/:id', function (req, res) {
  res.end('ok');
});

router.post('/steward/rejectTopic/topic/:id', function (req, res) {
  res.end('ok');
});

router.get('/researcher/queryHistory/topic/:id', function (req, res) {
  var response = {
    skipped: 0,
    totalCount: 970
  };
  
  response.queryRecords = service.getQueryHistory(response.totalCount);
  res.json(response);
});

router.get('/researcher/queryHistory', function (req, res) {
  var response = {
    skipped: 0,
    totalCount: 970
  };
  
  response.queryRecords = service.getQueryHistory(response.totalCount);
  res.json(response);
});

router.get('/steward/queryHistory/topic/:id', function (req, res) {
  var response = {
    skipped: 0,
    totalCount: 970
  };
  
  response.queryRecords = service.getQueryHistory(response.totalCount, 'DataSteward');
  res.json(response);
});

router.get('/steward/queryHistory', function (req, res) {
  var response = {
    skipped: 0,
    totalCount: 970
  };
  
  response.queryRecords = service.getQueryHistory(response.totalCount, 'DataSteward');
  res.json(response);
});

router.get('/steward/queryHistory/user/:userName', function (req, res) {
  var response = service.getJSONQueryHistory();
  res.json(response);
});

router.get('/steward/statistics/queriesPerUser', function (req, res) {
  var response = service.getQueriesPerUser();

  res.json(response);
});

router.get('/steward/statistics/topicsPerState', function (req, res) {
  var response = service.getTopicsPerState();
  res.json(response);
});
*/



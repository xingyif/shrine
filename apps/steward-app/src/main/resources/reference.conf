shrine {
  steward {

    createTopicsMode = Pending  //Can be Pending, Approved, or TopcisIgnoredJustLog
                                //Pending - new topics start in the Pending state; researchers must wait for the Steward to approve them
                                //Approved - new topics start in the Approved state; researchers can use them immediately
                                //TopicsIgnoredJustLog - all queries are logged and approved; researchers don't need to create topics

    emailDataSteward {
      sendAuditEmails = true
      interval = "1 day" //Audit researchers daily
      maxQueryCountBetweenAudits = 30 //If a researcher runs more than this many queries since the last audit audit her
      minTimeBetweenAudits = "30 days" //If a researcher runs at least one query, audit those queries if this much time has passed

      //provide the email address of the shrine node system admin, to handle bounces and invalid addresses
      //from = "shrine-admin@example.com"
      //provide the email address of the shrine node system admin, to handle bounces and invalid addresses
      //to = "shrine-steward@example.com"

      subject = "Audit SHRINE researchers"
      //The baseUrl for the data steward to be substituted in to email text. Must be supplied if it is used in the email text.
      //stewardBaseUrl = "https://example.com:8443/steward/"

      //Text to use for the email audit.
      // AUDIT_LINES will be replaced by a researcherLine for each researcher to audit.
      // STEWARD_BASE_URL will be replaced by the value in stewardBaseUrl if available.
      emailBody = """Please audit the following users at STEWARD_BASE_URL at your earliest convinience:
AUDIT_LINES"""

      //Text to use per researcher to audit.
      //FULLNAME, USERNAME, COUNT and LAST_AUDIT_DATE will be replaced with appropriate text.
      researcherLine = "FULLNAME (USERNAME) has run COUNT since LAST_AUDIT_DATE."
    }

    database {
      dataSourceFrom = "JNDI" //Can be JNDI or testDataSource . Use testDataSource for tests, JNDI everywhere else
      jndiDataSourceName = "java:comp/env/jdbc/stewardDB" //or leave out for tests
      slickProfileClassName = "slick.driver.MySQLDriver$" // Can be
      //        slick.driver.H2Driver$
      //        slick.driver.MySQLDriver$
      //        slick.driver.PostgresDriver$
      //        slick.driver.SQLServerDriver$
      //        slick.driver.JdbcDriver$
      //        freeslick.OracleProfile$
      //        freeslick.MSSQLServerProfile$
      //
      //        (Yes, with the $ on the end)

// For testing without JNDI
//      testDataSource {

        //typical test settings for unit tests
        //driverClassName = "org.h2.Driver"

        //url = "jdbc:h2:mem:test;DB_CLOSE_DELAY=-1" //H2 embedded in-memory for unit tests
        //url = "jdbc:h2:~/stewardTest.h2" //H2 embedded on disk at ~/test
//      }
      createTablesOnStart = false //for testing with H2 in memory, when not running unit tests. Set to false normally
    }

    gruntWatch = false //false for production, true for mvn tomcat7:run . Allows the client javascript and html files to be loaded via gruntWatch .

  }

  pmEndpoint {
    url = "http://changeme.com/i2b2/services/PMService/getServices" //"http://services.i2b2.org/i2b2/services/PMService/getServices"
    acceptAllCerts = true
    timeout {
      seconds = 10
    }
  }

  authenticate {
    realm = "SHRINE Steward API"
    usersource
      {
        type = "PmUserSource" //Must be ConfigUserSource (for isolated testing) or PmUserSource (for everything else)
        domain = "set shrine.authenticate.usersource.domain to the PM authentication domain in steward.conf" //"i2b2demo"
      }
  }

  // If the pmEndpoint acceptAllCerts = false then you need to supply a keystore
//  keystore {
//    file = "shrine.keystore"
//    password = "chiptesting"
//    privateKeyAlias = "test-cert"
//    keyStoreType = "JKS"
//    caCertAliases = [carra ca]
//  }
}

//todo typesafe config precedence seems to do the right thing, but I haven't found the rules that say this reference.conf should override others
akka {
  loglevel = INFO

  //  log-config-on-start = on
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  // logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  // Toggles whether the threads created by this ActorSystem should be daemons or not
  daemonic = on
}

spray.servlet {
  boot-class = "net.shrine.steward.Boot"
  request-timeout = 30s
}


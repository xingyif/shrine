shrine {

  humanReadableNodeName = "UnitTestNode"

  messagequeue {
    implementation = "net.shrine.hornetqmom.LocalHornetQMom" //todo stays this way until the package rename SHRINE-2307
  }

  metaData {
    ping = "pong"
    five = 5
    list = [list, list, list]
    object {
      objectVal = 10
    }
  }
  problem {
    problemHandler = "net.shrine.problem.NoOpProblemHandler$"
  }
  authenticate {
    realm = "test meta service"
    usersource {
      //Bogus security for testing
      type = "ConfigUserSource" //Must be ConfigUserSource (for isolated testing) or PmUserSource (for everything else)
      researcher {
        username = "ben"
        password = "kapow"
      }
      steward {
        username = "dave"
        password = "kablam"
      }
      qep{
        username = "qep"
        password = "trustme"
      }
      admin{
        username = "keith"
        password = "shh!"
      }
    }
  }
  queryEntryPoint {
    audit {
      collectQepAudit = false

      database {
        slickProfileClassName = "slick.driver.H2Driver$"
        createTablesOnStart = true //for testing with H2 in memory, when not running unit tests. Set to false normally

        dataSourceFrom = "testDataSource" //Can be JNDI or testDataSource . Use testDataSource for tests, JNDI everywhere else

        testDataSource {
          driverClassName = "org.h2.Driver"
          url = "jdbc:h2:mem:test;DB_CLOSE_DELAY=-1" //H2 embedded in-memory for unit tests ;TRACE_LEVEL_SYSTEM_OUT=2 for H2's trace
        }
      }
    }
  }
}

spray.can.server.request-timeout = 20 s
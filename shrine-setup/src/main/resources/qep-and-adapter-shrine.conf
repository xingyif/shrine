shrine {

  messagequeue {
    blockingq {
      serverUrl = "https://shrine-hub:6443/shrine-metadata/mom"
    }
  }

  pmEndpoint {
    url = "http://172.28.128.5:9090/i2b2/services/PMService/getServices"
  }

  ontEndpoint {
    url = "http://172.28.128.5:9090/i2b2/services/OntologyService/"
  }
  
  hiveCredentials {
    domain = "i2b2demo"
    username = "demo"
    password = "changeit"
    crcProjectId = "Demo"
    ontProjectId = "SHRINE"
  }

  breakdownResultOutputTypes {
    PATIENT_AGE_COUNT_XML {
      description = "Age patient breakdown"
    }
      
    PATIENT_RACE_COUNT_XML {
      description = "Race patient breakdown"
    }

    PATIENT_VITALSTATUS_COUNT_XML {
      description = "Vital Status patient breakdown"
    }

    PATIENT_GENDER_COUNT_XML {
      description = "Gender patient breakdown"
    }
  }

  authenticate {
    usersource {
      domain = "i2b2demo"
    }
  }

  queryEntryPoint {

    broadcasterServiceEndpoint {
      url = "https://shrine-hub:6443/shrine/rest/broadcaster/broadcast"
    }
    //shrine-steward config
    shrineSteward {
      qepUserName = "qep"
      qepPassword = "changeit"
      stewardBaseUrl = "https://shrine-node1:6443"
    }

    //todo default in 1.24.1.1
    includeAggregateResults = false

    maxQueryWaitTime {
      minutes = 5
    }
  }

  adapter {

    crcEndpoint {
      url = "http://172.28.128.5:9090/i2b2/services/QueryToolService/"
    }

    adapterMappingsFileName = "AdapterMappings.csv"

    maxSignatureAge {
      minutes = 5
    }

    //todo default in 1.24.1.1
    immediatelyRunIncomingQueries = true
  }

  networkStatusQuery = "\\\\SHRINE\\SHRINE\\Demographics\\Gender\\Male\\"

  humanReadableNodeName = "SHRINE Node 1"

  shrineDatabaseType = "mysql"

  keystore {
    file = "/opt/shrine/shrine.keystore"
    password = "changeit"
    privateKeyAlias = "shrine-node1"
    keyStoreType = "JKS"
    caCertAliases = ["shrine-ca"]
  }

  steward {
    createTopicsMode = Approved

    emailDataSteward {
      //provide the email address of the shrine node system admin, to handle bounces and invalid addresses
      from = "shrine-admin@example.com"
      //provide the email address of the shrine node system admin, to handle bounces and invalid addresses
      to = "shrine-steward@example.com"
    }
  }
}

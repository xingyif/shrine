shrine {

  messagequeue {
    hornetQWebApi {
      enabled = "true"
    }
  }

  pmEndpoint {
    url = "http://172.28.128.3:9090/i2b2/services/PMService/getServices"
  }

  ontEndpoint {
    url = "http://172.28.128.3:9090/i2b2/services/OntologyService/"
  }
  
  hiveCredentials {
    domain = "i2b2demo"
    username = "demo"
    password = "demouser"
    crcProjectId = "Demo"
    ontProjectId = "SHRINE"
  }

  breakdownResultOutputTypes {
    PATIENT_AGE_COUNT_XML {
      description = "Age patient breakdown"
    }
      
    PATIENT_RACE_COUNT_XML {
      description = "Race patient breakdown"
    }

    PATIENT_VITALSTATUS_COUNT_XML {
      description = "Vital Status patient breakdown"
    }

    PATIENT_GENDER_COUNT_XML {
      description = "Gender patient breakdown"
    }
  }

  authenticate {
    usersource {
      domain = "i2b2demo"
    }
  }

  queryEntryPoint {

    broadcasterServiceEndpoint {
      url = "https://shrine-hub:6443/shrine/rest/broadcaster/broadcast"
    }
    //shrine-steward config
    shrineSteward {
      qepUserName = "qep"
      qepPassword = "changeit"
      stewardBaseUrl = "https://shrine-node1:6443"
    }

    includeAggregateResults = false

    maxQueryWaitTime {
      minutes = 5
    }
  }

  hub {
    create = true

    shouldQuerySelf = false //true if there is an adapter at the hub , or just add a loopback address to downstreamNodes

    maxQueryWaitTime {
      minutes = 4.5
    }

    downstreamNodes {
      "SHRINE Node 1" = "https://shrine-node1:6443/shrine/rest/adapter/requests"
    }
  }

  adapter {
    create = false
  }

  networkStatusQuery = "\\\\SHRINE\\SHRINE\\Demographics\\Gender\\Male\\"

  humanReadableNodeName = "SHRINE Hub"

  shrineDatabaseType = "mysql"

  keystore {
    file = "/opt/shrine/shrine.keystore"
    password = "changeit"
    privateKeyAlias = "shrine-hub"
    keyStoreType = "JKS"
    caCertAliases = ["shrine-ca"]
  }

  steward {
    createTopicsMode = Approved
  }
}
